<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaProjectS.dao.BoardDAO">
	<!-- select -->
  <select id="getBoardList" resultType="com.spring.javaProjectS.vo.BoardVO">
    <!-- select * from board2 order by idx desc limit #{startIndexNo}, #{pageSize}; -->
    select *, datediff(wDate, now()) as date_diff, timestampdiff(hour, wDate, now()) as hour_diff, (select count(*) from board2Reply where boardIdx = b.idx) as replyCnt from board2 as b order by idx desc limit #{startIndexNo}, #{pageSize};
  </select>
  <select id="getBoardContent" resultType="com.spring.javaProjectS.vo.BoardVO">
  	select * from board2 where idx = #{idx};
  </select>
  <select id="getTotRecCnt" resultType="int">
  	select count(*) from board2; 
  </select>
  
	<!-- 연산자는 spring 에서는 에러가 나기 때문에 ![CDATA[]] 태그를 사용 -->
  <select id="getPreNextSearch" resultType="com.spring.javaProjectS.vo.BoardVO">
  	<if test="str == 'preVo'">
  		select idx,title from board2 where <![CDATA[idx < #{idx}]]> order by idx desc limit 1;
  	</if>
  	<if test="str != 'preVo'">
  		select idx,title from board2 where <![CDATA[idx > #{idx}]]> order by idx limit 1;
  	</if>
  </select>
  <select id="getBoardParentReplyCheck" resultType="com.spring.javaProjectS.vo.Board2ReplyVO">
  	select * from board2Reply where boardIdx = #{boardIdx} order by idx desc limit 1;
  </select>
  <select id="getBoard2ReplyList" resultType="com.spring.javaProjectS.vo.Board2ReplyVO">
  	select * from board2Reply where boardIdx = #{idx} order by re_order;
  </select>
  <select id="getTotRecCntSearch" resultType="int">
  <!-- 외부에서 넘긴 변수는 $를 사용 param으로 넘긴 변수는 #을 사용 -->
  	select count(*) from board2 where ${search} like concat('%',#{searchString},'%');
  </select>
  <select id="getBoardSearchList"  resultType="com.spring.javaProjectS.vo.BoardVO">
  	select * from board2 where ${search} like concat('%',#{searchString},'%') order by idx desc limit #{startIndexNo},#{pageSize};
  </select>
  
  <!-- insert -->
  <insert id="setBoardInput">
    insert into board2 values(default,#{vo.mid},#{vo.nickName},#{vo.title},#{vo.email},#{vo.homePage},#{vo.content},default,#{vo.hostIp},#{vo.openSw},default,default);
  </insert>
  <insert id="setBoardReplyInput">
  	insert into board2Reply values(default,#{replyVo.boardIdx},#{replyVo.re_step},#{replyVo.re_order},#{replyVo.mid},#{replyVo.nickName},default,#{replyVo.hostIp},#{replyVo.content});
  </insert>
  
  
  <!-- update -->
  <update id="setBoardUpdate">
  	update board2 set nickName = #{vo.nickName}, title = #{vo.title}, email = #{vo.email}, homePage = #{vo.homePage}, content = #{vo.content}, hostIp = #{vo.hostIp}, openSw = #{vo.openSw}, wDate = now() where idx = #{vo.idx};
  </update>
  <update id="setReplyOrderUpdate">
  	update board2Reply set re_order = re_order + 1 where boardIdx = #{boardIdx} and re_order > #{re_order};
  </update>
  <update id="setReadNumPlus">
  	update board2 set readNum = readNum+1 where idx = #{idx};
  </update>
  
  <!-- delete -->
  <delete id="setBoardDelete">
  	delete from board2 where idx = #{idx};
  </delete>
</mapper>
